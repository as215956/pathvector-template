################################################################################
###                                                                          ###
###   AS215956.net - Pathvector Updater                                      ###
##########################################                                   ###
###                                                                          ###
###   File      : pathvector config file                                     ###
###   Version   : 2024.12-001                                                ###
###   Copyright : 2024 (and beyond) - Dennis de Houx, AS215956, All In One   ###
###   Author    : Dennis de Houx <dennis@dehoux.be>                          ###
###   License   : MIT                                                        ###
###                                                                          ###
################################################################################


###
### NOTE: please replace all placeholders in { } and remove the brackets { } !!!
###       feel free to adjust this config to your needs
###


### General Settings
########################################

### Basic router settings
asn: {YOUR-ASN}
router-id: {YOUR-ROUTER-IPv4}
hostname: {YOUR-ROUTER-HOSTNAME}
accept-default: true
default-route: false
keep-filtered: true
#merge-paths: true

### Default bgp communities on all exports
origin-communities:
  - {YOUR-ASN}:100:1

local-communities:
  - {YOUR-ASN}:100:1

### Announce local prefixes
prefixes:
  - {2001:0DB8:beef::/40}
  - {2001:0DB8:dead::/48}

### Default add on import on all sessions (remove comment if you want to use)
#add-on-import:
#  - {YOUR-ASN}:xxx:xxx

### Default add on export on all sessions (remove comment if you want to use)
#add-on-export:
#  - {YOUR-ASN}:xxx:xxx

### Default blocklist ASN and/or prefixes (remove comment if you want to use)
#blocklist:
# - {AS65536}
# - {2001:0DB8:beef::/48}

### Default blocklist ASN and/or prefixes from url (remove comment if you want to use)
#blocklist-urls:
# - {http://localhost/blocklist/prefixes}
# - {http://localhost/blocklist/asns}

### Default blocklist ASN and/or prefixes from files (remove comment if you want to use)
#blocklist-files:
# - {/opt/as215956/pathvector/blocklist.txt}
# - {/etc/bird/define/blocklist.conf}

### Opinionated Tier1 transit list
transit-asns:
  - 174   # Cogent Communications
  - 209   # Qwest (HE carries this on IXPs IPv6 (Jul 12 2018)) / CenturyLink Communications
  - 701   # UUNET / Verizon Business
  - 702   # UUNET / Verizon Business
  - 1239  # Sprint
  - 1299  # Telia / Arelion Sweden / Twelve99
  - 2149  # Cogent Communications
  - 2914  # NTT Communications
  - 3257  # GTT Backbone
  - 3320  # Deutsche Telekom AG (DTAG)
  - 3356  # Level3
  - 3491  # PCCW Global
  - 3549  # Level3
  - 3561  # Savvis / CenturyLink Communications
  - 4134  # Chinanet Backbone
  - 5511  # Orange opentransit
  - 6453  # Tata Communications (America)
  - 6461  # Zayo Bandwidth
  - 6494  # Cogent Communications
  - 6640  # CenturyLink Communications
  - 6762  # Seabone / Telecom Italia Sparkle
  - 6830  # Liberty Global
  - 6939  # Hurricane Electric
  - 7018  # AT&T Services
  - 58682 # Level3 Carrier

### RPKI & IRR settings (only use one rtr server)
rpki-enable: true
### ripe.net (https://rpki-validator.ripe.net/)
#rtr-server: rpki-validator.ripe.net:3323   # IPv4: 193.0.11.46, IPv6: 2001:67c:2e8:25::c100:b2e
### rpki.cloud (https://github.com/rpki-cloud/rpki.cloud)
#rtr-server: r1.rpki.cloud:3323             # IPv4: 184.73.232.63, IPv6: 2600:1f18:e99:5401:e875:17cd:7a52:5d6c
#rtr-server: r2.rpki.cloud:3323             # IPv4: 52.52.161.24, IPv6: 2600:1f1c:244:6000:e347:c4c8:56a2:d665
### cloudflare (https://rpki.cloudflare.com)
rtr-server: rtr.rpki.cloudflare.com:8282    # IPv4: 172.65.0.2, IPv6: 2606:4700:60::2
irr-server: rr.ntt.net                      # IPv4: 128.241.192.40, IPv6: 2001:418:3ff:5::192:40
irr-query-timeout: 30

### Pathvector settings
log-file: /var/log/pathvector.log
web-ui-file: /opt/as215956/pathvector/ui/index.html

### PeeringDB settings
peeringdb-url: https://peeringdb.com/api/
peeringdb-api-key: "{YOUR-API-KEY}"
peeringdb-query-timeout: 60
peeringdb-cache: true

### bgpq4 settings
bgpq-args: -S AFRINIC,APNIC,ARIN,LACNIC,RIPE


### Kernel Settings
########################################
kernel:
  learn: false
  export: true
### Static routes (remove comment if you want to use)
#  statics:
#    "2001:0DB8:3019:a013::/64": "fe80::be24:11ff:fed8:9ab"


### Peer templates
########################################
templates:

### iBGP
  ibgp:
    asn: {YOUR-ASN}                   # Our own AS
    tags:                             # Tags to make config more readable
      - "iBGP"
    import: true                      # Import routes from this peer
    export: true                      # Export routes to this peer
    local-pref: 4500                  # Local preference
    default-local-pref: 4500          # Default local preference
    set-local-pref: true              # Force local preference to be set
    multihop: false                   # Allow multihop connections
    next-hop-self: true               # Nexthop needs to be own listen ip
    remove-private-asns: false        # Remove Private ASN's from aspath before export
    interpret-communities: true       # Well-known RRFC's
    advertise-hostname: true          # Advertise hostname to peer
    disable-after-error: false        # Disable peer after an error
    announce-default: false           # Export a default route 0.0.0.0/°, ::/0
    allow-local-as: true              # Announce routes originated by local AS
    announce-originated: true         # Announce originated routes
    announce:                         # Announce prefixes with following bgp community
      - "{YOUR-ASN}:100:1"            ## Originated
      - "{YOUR-ASN}:100:2"            ## Downstream / Customers
      - "{YOUR-ASN}:100:3"            ## Direct Peer
      - "{YOUR-ASN}:100:4"            ## IX route servers
      - "{YOUR-ASN}:100:6"            ## iBGP
    import-limit6: 300000             # Maximum number of prefixes to import after filters
    export-limit6: 300000             # Maximum number of prefixes to export after filters
    import-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    export-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    receive-limit-violation: warn     # Action when limit is tripped (disabled|warn)
    enforce-first-as: false           # Only accept routes where first AS is equal to neighbor
    enforce-peer-nexthop: false       # Only accept routes where next-hop is equal to neighbor ip
    allow-blackhole-community: false  # Send blackholed routes to peer
    filter-irr: false                 # Enable IRR Filtering
    filter-rpki: true                 # Enable RPKI Filtering, reject unvalid prefixes
    strict-rpki: false                # Only accecpt RPKI signed prefixes
    filter-max-prefix: true           # Filter maximum prefix
    filter-bogon-routes: true         # Filter bogon prefixes
    filter-bogon-asns: true           # Filter bogon asn's
    filter-transit-asns: true         # Filter tier1 transit
    filter-prefix-length: true        # Filter too long/short prefixes
    filter-blocklist: true            # Filter global blocklist
    auto-import-limits: false         # Import limits from PeeringDB
    auto-as-set: false                # Import as-set from PeeringDB
    auto-as-set-members: false        # Get members from as-set
    honor-graceful-shutdown: true     # RFC8326 graceful shutdown

### Upstream / Transit
  upstream:
    role: customer                    # RFC 9234 Local BGP role (provider|rs|rs-client|customer|peer)
    tags:                             # Tags to make config more readable
      - "Transit"
    import: true                      # Import routes from this peer
    export: true                      # Export routes to this peer
    local-pref: 1000                  # Local preference
    default-local-pref: 1000          # Default local preference
    set-local-pref: true              # Force local preference to be set
    multihop: false                   # Allow multihop connections
    next-hop-self: true               # Nexthop needs to be own listen ip
    remove-private-asns: true         # Remove Private ASN's from aspath before export
    interpret-communities: true       # Well-known RRFC's
    advertise-hostname: false         # Advertise hostname to peer
    disable-after-error: false        # Disable peer after an error
    announce-default: false           # Export a default route 0.0.0.0/°, ::/0
    allow-local-as: true              # Announce routes originated by local AS
    announce-originated: true         # Announce originated routes
    announce:                         # Announce prefixes with following bgp community
      - "{YOUR-ASN}:100:1"            ## Originated
      - "{YOUR-ASN}:100:2"            ## Downstream / Customers
    remove-all-communities: {YOUR-ASN} # Do not send your own communities to upstream
    import-limit6: 300000             # Maximum number of prefixes to import after filters
    export-limit6: 100                # Maximum number of prefixes to export after filters
    import-limit-violation: disable   # Action when limit is tripped (disabled|warn)
    export-limit-violation: disable   # Action when limit is tripped (disabled|warn)
    receive-limit-violation: warn     # Action when limit is tripped (disabled|warn)
    enforce-first-as: false           # Only accept routes where first AS is equal to neighbor
    enforce-peer-nexthop: false       # Only accept routes where next-hop is equal to neighbor ip
    allow-blackhole-community: false  # Send blackholed routes to peer
    filter-irr: true                  # Enable IRR Filtering
    filter-rpki: true                 # Enable RPKI Filtering, reject unvalid prefixes
    strict-rpki: false                # Only accecpt RPKI signed prefixes
    filter-max-prefix: true           # Filter maximum prefix
    filter-bogon-routes: true         # Filter bogon prefixes
    filter-bogon-asns: true           # Filter bogon asn's
    filter-transit-asns: true         # Filter tier1 transit
    filter-prefix-length: true        # Filter too long/short prefixes
    filter-blocklist: true            # Filter global blocklist
    auto-import-limits: false         # Import limits from PeeringDB
    auto-as-set: false                # Import as-set from PeeringDB
    auto-as-set-members: false        # Get members from as-set
    honor-graceful-shutdown: true     # RFC8326 graceful shutdown
    pre-import-filter:                # Run additional scripts after import
      add_on_import('upstream', <pathvector.asn>);
    pre-export:                       # Run additional scripts before export
      add_on_export('upstream', <pathvector.asn>);

### Internet Exchanges (Route Servers)
  routeserver:
    role: rs-client                   # RFC 9234 Local BGP role (provider|rs|rs-client|customer|peer)
    tags:                             # Tags to make config more readable
      - "IX-RS"
    import: true                      # Import routes from this peer
    export: true                      # Export routes to this peer
    local-pref: 2000                  # Local preference
    default-local-pref: 2000          # Default local preference
    set-local-pref: true              # Force local preference to be set
    multihop: false                   # Allow multihop connections
    next-hop-self: true               # Nexthop needs to be own listen ip
    remove-private-asns: true         # Remove Private ASN's from aspath before export
    interpret-communities: true       # Well-known RRFC's
    advertise-hostname: false         # Advertise hostname to peer
    disable-after-error: false        # Disable peer after an error
    announce-default: false           # Export a default route 0.0.0.0/°, ::/0
    allow-local-as: true              # Announce routes originated by local AS
    announce-originated: true         # Announce originated routes
    announce:                         # Announce prefixes with following bgp community
      - "{YOUR-ASN}:100:1"            ## Originated
      - "{YOUR-ASN}:100:2"            ## Downstream / Customers
    remove-all-communities: {YOUR-ASN} # Do not send your own communities to upstream
    import-limit6: 300000             # Maximum number of prefixes to import after filters
    export-limit6: 100                # Maximum number of prefixes to export after filters
    import-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    export-limit-violation: disable   # Action when limit is tripped (disabled|warn)
    receive-limit-violation: warn     # Action when limit is tripped (disabled|warn)
    enforce-first-as: false           # Only accept routes where first AS is equal to neighbor
    enforce-peer-nexthop: false       # Only accept routes where next-hop is equal to neighbor ip
    allow-blackhole-community: false  # Send blackholed routes to peer
    filter-irr: true                  # Enable IRR Filtering
    filter-rpki: true                 # Enable RPKI Filtering, reject unvalid prefixes
    strict-rpki: false                # Only accecpt RPKI signed prefixes
    filter-max-prefix: true           # Filter maximum prefix
    filter-bogon-routes: true         # Filter bogon prefixes
    filter-bogon-asns: true           # Filter bogon asn's
    filter-transit-asns: true         # Filter tier1 transit
    filter-prefix-length: true        # Filter too long/short prefixes
    filter-blocklist: true            # Filter global blocklist
    auto-import-limits: true          # Import limits from PeeringDB
    auto-as-set: true                 # Import as-set from PeeringDB
    auto-as-set-members: true         # Get members from as-set
    honor-graceful-shutdown: true     # RFC8326 graceful shutdown
    pre-import-filter:                # Run additional scripts after import
      add_on_import('ix', <pathvector.asn>);
    pre-export:                       # Run additional scripts before export
      add_on_export('ix', <pathvector.asn>);

### Direct Peer (physical / tunnel)
  peerPNI:
    role: peer                        # RFC 9234 Local BGP role (provider|rs|rs-client|customer|peer)
    tags:                             # Tags to make config more readable
      - "peerPNI"
    import: true                      # Import routes from this peer
    export: true                      # Export routes to this peer
    local-pref: 4000                  # Local preference
    default-local-pref: 4000          # Default local preference
    set-local-pref: true              # Force local preference to be set
    multihop: false                   # Allow multihop connections
    next-hop-self: true               # Nexthop needs to be own listen ip
    remove-private-asns: true         # Remove Private ASN's from aspath before export
    interpret-communities: true       # Well-known RRFC's
    advertise-hostname: false         # Advertise hostname to peer
    disable-after-error: false        # Disable peer after an error
    announce-default: false           # Export a default route 0.0.0.0/°, ::/0
    allow-local-as: true              # Announce routes originated by local AS
    announce-originated: true         # Announce originated routes
    announce:                         # Announce prefixes with following bgp community
      - "{YOUR-ASN}:100:1"            ## Originated
      - "{YOUR-ASN}:100:2"            ## Downstream / Customers
    remove-all-communities: {YOUR-ASN} # Do not send your own communities to upstream
    import-limit6: 300                # Maximum number of prefixes to import after filters
    export-limit6: 100                # Maximum number of prefixes to export after filters
    import-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    export-limit-violation: disable   # Action when limit is tripped (disabled|warn)
    receive-limit-violation: warn     # Action when limit is tripped (disabled|warn)
    enforce-first-as: false           # Only accept routes where first AS is equal to neighbor
    enforce-peer-nexthop: true        # Only accept routes where next-hop is equal to neighbor ip
    allow-blackhole-community: false  # Send blackholed routes to peer
    filter-irr: true                  # Enable IRR Filtering
    filter-rpki: true                 # Enable RPKI Filtering, reject unvalid prefixes
    strict-rpki: false                # Only accecpt RPKI signed prefixes
    filter-max-prefix: true           # Filter maximum prefix
    filter-bogon-routes: true         # Filter bogon prefixes
    filter-bogon-asns: true           # Filter bogon asn's
    filter-transit-asns: true         # Filter tier1 transit
    filter-prefix-length: true        # Filter too long/short prefixes
    filter-blocklist: true            # Filter global blocklist
    auto-import-limits: true          # Import limits from PeeringDB
    auto-as-set: true                 # Import as-set from PeeringDB
    auto-as-set-members: true         # Get members from as-set
    honor-graceful-shutdown: true     # RFC8326 graceful shutdown
    pre-import-filter:                # Run additional scripts after import
      add_on_import('peer', <pathvector.asn>);
    pre-export:                       # Run additional scripts before export
      add_on_export('peer', <pathvector.asn>);

### Direct Peer (over Internet Exchange)
  peerIX:
    role: peer                        # RFC 9234 Local BGP role (provider|rs|rs-client|customer|peer)
    tags:                             # Tags to make config more readable
      - "peerIX"
    import: true                      # Import routes from this peer
    export: true                      # Export routes to this peer
    local-pref: 3000                  # Local preference
    default-local-pref: 3000          # Default local preference
    set-local-pref: true              # Force local preference to be set
    multihop: false                   # Allow multihop connections
    next-hop-self: true               # Nexthop needs to be own listen ip
    remove-private-asns: true         # Remove Private ASN's from aspath before export
    interpret-communities: true       # Well-known RRFC's
    advertise-hostname: false         # Advertise hostname to peer
    disable-after-error: false        # Disable peer after an error
    announce-default: false           # Export a default route 0.0.0.0/°, ::/0
    allow-local-as: true              # Announce routes originated by local AS
    announce-originated: true         # Announce originated routes
    announce:                         # Announce prefixes with following bgp community
      - "{YOUR-ASN}:100:1"            ## Originated
      - "{YOUR-ASN}:100:2"            ## Downstream / Customers
    remove-all-communities: {YOUR-ASN} # Do not send your own communities to upstream
    import-limit6: 300                # Maximum number of prefixes to import after filters
    export-limit6: 100                # Maximum number of prefixes to export after filters
    import-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    export-limit-violation: disable   # Action when limit is tripped (disabled|warn)
    receive-limit-violation: warn     # Action when limit is tripped (disabled|warn)
    enforce-first-as: false           # Only accept routes where first AS is equal to neighbor
    enforce-peer-nexthop: false       # Only accept routes where next-hop is equal to neighbor ip
    allow-blackhole-community: false  # Send blackholed routes to peer
    filter-irr: true                  # Enable IRR Filtering
    filter-rpki: true                 # Enable RPKI Filtering, reject unvalid prefixes
    strict-rpki: false                # Only accecpt RPKI signed prefixes
    filter-max-prefix: true           # Filter maximum prefix
    filter-bogon-routes: true         # Filter bogon prefixes
    filter-bogon-asns: true           # Filter bogon asn's
    filter-transit-asns: true         # Filter tier1 transit
    filter-prefix-length: true        # Filter too long/short prefixes
    filter-blocklist: true            # Filter global blocklist
    auto-import-limits: true          # Import limits from PeeringDB
    auto-as-set: true                 # Import as-set from PeeringDB
    auto-as-set-members: true         # Get members from as-set
    honor-graceful-shutdown: true     # RFC8326 graceful shutdown
    pre-import-filter:                # Run additional scripts after import
      add_on_import('peer', <pathvector.asn>);
    pre-export:                       # Run additional scripts before export
      add_on_export('peer', <pathvector.asn>);

### Downstream / Customers (full table)
  downstreamFULL:
    role: provider                    # RFC 9234 Local BGP role (provider|rs|rs-client|customer|peer)
    tags:                             # Tags to make config more readable
      - "Customer"
      - "Full"
    import: true                      # Import routes from this peer
    export: true                      # Export routes to this peer
    local-pref: 5000                  # Local preference
    default-local-pref: 5000          # Default local preference
    set-local-pref: true              # Force local preference to be set
    multihop: false                   # Allow multihop connections
    next-hop-self: true               # Nexthop needs to be own listen ip
    remove-private-asns: true         # Remove Private ASN's from aspath before export
    interpret-communities: true       # Well-known RRFC's
    advertise-hostname: true          # Advertise hostname to peer
    disable-after-error: false        # Disable peer after an error
    announce-default: false           # Export a default route 0.0.0.0/°, ::/0
    announce-all: true                # Export full table
    allow-local-as: true              # Announce routes originated by local AS
    announce-originated: true         # Announce originated routes
    announce:                         # Announce prefixes with following bgp community
      - "{YOUR-ASN}:100:1"            ## Originated
      - "{YOUR-ASN}:100:2"            ## Downstream / Customers
    import-limit6: 50                 # Maximum number of prefixes to import after filters
    export-limit6: 100                # Maximum number of prefixes to export after filters
    import-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    export-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    receive-limit-violation: warn     # Action when limit is tripped (disabled|warn)
    enforce-first-as: false           # Only accept routes where first AS is equal to neighbor
    enforce-peer-nexthop: true        # Only accept routes where next-hop is equal to neighbor ip
    allow-blackhole-community: true   # Send blackholed routes to peer
    filter-irr: true                  # Enable IRR Filtering
    filter-rpki: true                 # Enable RPKI Filtering, reject unvalid prefixes
    strict-rpki: false                # Only accecpt RPKI signed prefixes
    filter-max-prefix: true           # Filter maximum prefix
    filter-bogon-routes: true         # Filter bogon prefixes
    filter-bogon-asns: true           # Filter bogon asn's
    filter-transit-asns: true         # Filter tier1 transit
    filter-prefix-length: true        # Filter too long/short prefixes
    filter-blocklist: true            # Filter global blocklist
    auto-import-limits: true          # Import limits from PeeringDB
    auto-as-set: true                 # Import as-set from PeeringDB
    auto-as-set-members: true         # Get members from as-set
    honor-graceful-shutdown: true     # RFC8326 graceful shutdown
    pre-import-filter:                # Run additional scripts after import
      add_on_import('peer', <pathvector.asn>);
    pre-export:                       # Run additional scripts before export
      add_on_export('peer', <pathvector.asn>);

### Downstream / Customers (partial default table)
  downstreamDEFAULT:
    role: provider                    # RFC 9234 Local BGP role (provider|rs|rs-client|customer|peer)
    tags:                             # Tags to make config more readable
      - "Customer"
      - "Partial"
    import: true                      # Import routes from this peer
    export: true                      # Export routes to this peer
    local-pref: 5000                  # Local preference
    default-local-pref: 5000          # Default local preference
    set-local-pref: true              # Force local preference to be set
    multihop: false                   # Allow multihop connections
    next-hop-self: true               # Nexthop needs to be own listen ip
    remove-private-asns: true         # Remove Private ASN's from aspath before export
    interpret-communities: true       # Well-known RRFC's
    advertise-hostname: true          # Advertise hostname to peer
    disable-after-error: false        # Disable peer after an error
    announce-default: true            # Export a default route 0.0.0.0/°, ::/0
    announce-all: false               # Export full table
    allow-local-as: true              # Announce routes originated by local AS
    announce-originated: true         # Announce originated routes
    announce:                         # Announce prefixes with following bgp community
      - "{YOUR-ASN}:100:1"            ## Originated
      - "{YOUR-ASN}:100:2"            ## Downstream / Customers
    import-limit6: 50                 # Maximum number of prefixes to import after filters
    export-limit6: 100                # Maximum number of prefixes to export after filters
    import-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    export-limit-violation: warn      # Action when limit is tripped (disabled|warn)
    receive-limit-violation: warn     # Action when limit is tripped (disabled|warn)
    enforce-first-as: false           # Only accept routes where first AS is equal to neighbor
    enforce-peer-nexthop: true        # Only accept routes where next-hop is equal to neighbor ip
    allow-blackhole-community: true   # Send blackholed routes to peer
    filter-irr: true                  # Enable IRR Filtering
    filter-rpki: true                 # Enable RPKI Filtering, reject unvalid prefixes
    strict-rpki: false                # Only accecpt RPKI signed prefixes
    filter-max-prefix: true           # Filter maximum prefix
    filter-bogon-routes: true         # Filter bogon prefixes
    filter-bogon-asns: true           # Filter bogon asn's
    filter-transit-asns: true         # Filter tier1 transit
    filter-prefix-length: true        # Filter too long/short prefixes
    filter-blocklist: true            # Filter global blocklist
    auto-import-limits: true          # Import limits from PeeringDB
    auto-as-set: true                 # Import as-set from PeeringDB
    auto-as-set-members: true         # Get members from as-set
    honor-graceful-shutdown: true     # RFC8326 graceful shutdown
    pre-import-filter:                # Run additional scripts after import
      add_on_import('peer', <pathvector.asn>);
    pre-export:                       # Run additional scripts before export
      add_on_export('peer', <pathvector.asn>);


### BGP Sessions
########################################
peers:

### iBGP

### Upstream / Transit

### Internet Exchanges (Route Servers)

### Direct Peer (physical / tunnel)

### Direct Peer (over Internet Exchange)

### Downstream / Customers
