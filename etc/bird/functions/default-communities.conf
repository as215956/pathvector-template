################################################################################
###                                                                          ###
###   AS215956.net - Pathvector Updater                                      ###
##########################################                                   ###
###                                                                          ###
###   File      : add default communities function(s) for bird2              ###
###   Version   : 2024.12-001                                                ###
###   Copyright : 2024 (and beyond) - Dennis de Houx, AS215956, All In One   ###
###   Author    : Dennis de Houx <dennis@dehoux.be>                          ###
###   License   : MIT                                                        ###
###                                                                          ###
################################################################################


### Scrub BGP Communities (RFC 7454 Section 11)
function scrub_own_asn_on_import() {
    #bgp_community.delete([(ASN, *)]);
    bgp_large_community.delete([(ASN, *, *)]);
}

### Add default learned from customer/downstream community
function add_default_community_downstream() {
    bgp_large_community.add((ASN, 100, 2));
}

### Add default learned from direct peer community
function add_default_community_peer() {
    bgp_large_community.add((ASN, 100, 3));
}

### Add default learned from Internet Exchange Route Server community
function add_default_community_ix() {
    bgp_large_community.add((ASN, 100, 4));
}

### Add default learned from transit/upstream community
function add_default_community_upstream() {
    bgp_large_community.add((ASN, 100, 5));
}

### Add default learned from iBGP community
function add_default_community_ibgp() {
    bgp_large_community.add((ASN, 100, 6));
}

### Add default learned from peer session community
function add_default_community_peer_session(int peer_asn) {
    bgp_large_community.add((ASN, 101, peer_asn));
}

### Add default learned from Internet Exchange session community
function add_default_community_ix_session(int peer_asn) {
    bgp_large_community.add((ASN, 102, peer_asn));
}

### Add default learned in region where router is located community
function add_default_community_region() {
    if (ROUTER_REGION_CODE != "") then {
        bgp_large_community.add((ASN, 103, ROUTER_REGION_CODE));
    }
}

### Add default learned in country where router is located community
function add_default_community_country() {
    if (ROUTER_COUNTRY_CODE != "") then {
        bgp_large_community.add((ASN, 104, ROUTER_COUNTRY_CODE));
    }
}

### Add default learned in location where router is located community
function add_default_community_location() {
    if (ROUTER_LOCATION_ID != "") then {
        bgp_large_community.add((ASN, 105, ROUTER_LOCATION_ID));
    }
}

### Add default learned from router id community
function add_default_community_router() {
    if (ROUTER_ID != "") then {
        bgp_large_community.add((ASN, 106, ROUTER_ID));
    }
}

### Add default informational communities to peer/prefix
function add_default_communities(string type, int peer_asn) {
    scrub_own_asn_on_import();
    case type {
        "ibgp":
            add_default_community_ibgp();
            add_default_community_peer_session(peer_asn);
        "downstream":
            add_default_community_downstream();
            add_default_community_peer_session(peer_asn);
        "peer":
            add_default_community_peer();
            add_default_community_peer_session(peer_asn);
        "ix":
            add_default_community_ix();
            add_default_community_ix_session(peer_asn);
        "upstream":
            add_default_community_upstream();
            add_default_community_peer_session(peer_asn);
    }
    add_default_community_region();
    add_default_community_country();
    add_default_community_location();
    add_default_community_router();
}